import React, { useState, useEffect } from 'react';

function ChefDashboard({ handleAddFood, handleSetSpecialOfTheDay, foods, orders }) {
  const [newFood, setNewFood] = useState({
    name: '',
    description: '',
    ingredients: '',
    price: '',
  });
  const [selectedSpecial, setSelectedSpecial] = useState('');
  const [specialOfTheDay, setSpecialOfTheDay] = useState(null);

  // Calculate total money for the day
  const calculateTotalMoney = () => {
    const today = new Date().toISOString().split('T')[0]; // Get today's date
    const todaysOrders = orders.filter(order => order.date === today);
    const totalMoney = todaysOrders.reduce((total, order) => total + order.price, 0);
    return totalMoney;
  };

  // Handle food input change
  const handleInputChange = (e) => {
    const { name, value } = e.target;
    setNewFood({
      ...newFood,
      [name]: value,
    });
  };

  // Handle submitting new food
  const handleFoodSubmit = (e) => {
    e.preventDefault();
    const food = { ...newFood, id: Date.now() }; // Generate a unique ID (timestamp for simplicity)
    handleAddFood(food); // Pass the food data to the parent component (App.js)
    setNewFood({
      name: '',
      description: '',
      ingredients: '',
      price: '',
    });
  };

  // Handle setting the special of the day
  const handleSpecialSubmit = (e) => {
    e.preventDefault();
    const selectedFood = foods.find(food => food.id === parseInt(selectedSpecial));
    setSpecialOfTheDay(selectedFood);
    handleSetSpecialOfTheDay(selectedFood); // Pass the selected food to set it as special of the day
  };

  return (
    <div className="container mt-4">
      <h2>Chef's Dashboard</h2>

      {/* Total Money for Today */}
      <div className="mt-4">
        <h4>Total Money for Today: ${calculateTotalMoney().toFixed(2)}</h4>
      </div>

      {/* Add Food Form */}
      <h3>Add a New Food Item</h3>
      <form onSubmit={handleFoodSubmit}>
        <div className="mb-3">
          <label className="form-label">Food Name</label>
          <input
            type="text"
            className="form-control"
            name="name"
            value={newFood.name}
            onChange={handleInputChange}
          />
        </div>
        <div className="mb-3">
          <label className="form-label">Description</label>
          <textarea
            className="form-control"
            name="description"
            value={newFood.description}
            onChange={handleInputChange}
          />
        </div>
        <div className="mb-3">
          <label className="form-label">Ingredients</label>
          <textarea
            className="form-control"
            name="ingredients"
            value={newFood.ingredients}
            onChange={handleInputChange}
          />
        </div>
        <div className="mb-3">
          <label className="form-label">Price</label>
          <input
            type="text"
            className="form-control"
            name="price"
            value={newFood.price}
            onChange={handleInputChange}
          />
        </div>
        <button type="submit" className="btn btn-primary">
          Add Food
        </button>
      </form>

      {/* Select Special of the Day */}
      <h3>Select the Special of the Day</h3>
      <form onSubmit={handleSpecialSubmit}>
        <select
          className="form-select"
          onChange={(e) => setSelectedSpecial(e.target.value)}
        >
          <option value="">Select Food</option>
          {foods.map((food) => (
            <option key={food.id} value={food.id}>
              {food.name}
            </option>
          ))}
        </select>
        <button type="submit" className="btn btn-success mt-3" disabled={!selectedSpecial}>
          Set as Special
        </button>
      </form>

      {/* Display Today's Special */}
      {specialOfTheDay && (
        <div className="mt-4">
          <h4>Today's Special:</h4>
          <p>{specialOfTheDay.name}</p>
          <p>{specialOfTheDay.description}</p>
        </div>
      )}
    </div>
  );
}

export default ChefDashboard;

